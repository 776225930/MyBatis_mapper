<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper  namespace="com.example.mybatis.dao.EmployeeMapperPlus">
       <!--自定义某个javaBean的封装规则
	       type：自定义规则的Java类型
	       id:唯一id方便引用
	  -->
       <resultMap type="com.example.mybatis.bean.Employee" id="MyEmp">
           <!--指定主键列的封装规则
		     id定义主键会底层有优化；
		     column：指定哪一列
		     property：指定对应的javaBean属性
		    -->
           <id column="id" property="id"/>
           <result column="last_name" property="lastName"/>
           <!-- 其他不指定的列会自动封装：我们只要写resultMap就把全部的映射规则都写上。 -->
		   <result column="email" property="email"/>
		   <result column="gender" property="gender"/>
       </resultMap>
       <!-- Employee getEmpById(Integer id);
        resultMap-->
       <select id="getEmpById"   resultMap="MyEmp">
          select * from tbl_employee where id=#{id}
       </select>  
       <!-- 
                               联合查询
        -->
       <resultMap type="com.example.mybatis.bean.Employee" id="MyDifEmp">
            <id column="id" property="id"/>
            <result column="last_Name" property="lastName"/>
            <result column="gender" property="gender"/>
            <result column="did" property="dept.id"/>
            <result column="dept_Name" property="dept.departmentName"/>
       </resultMap>
       <!-- public  Employee getEmpAndDept(Integer id); -->
       <select id="getEmpAndDept"   resultMap="MyDifEmp">
          SELECT e.id id,e.last_Name last_Name,e.gender,e.d_id,
           d.id did,d.dept_Name FROM tbl_employee e,tbl_dept d 
           WHERE e.d_id=d.id AND e.id=#{id}
       </select>  
</mapper>